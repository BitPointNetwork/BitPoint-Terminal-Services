webpackJsonp([17],{1006:function(t,n,e){"use strict";(function(t){var r=e(0),a=e(107),i=e(697),o=function(){function Transactions(t,n){this._transactionService=t,this.router=n,null==localStorage.getItem("merchantId")&&void 0==localStorage.getItem("merchantId")||(this.merchantId=localStorage.getItem("merchantId"),this.getMerchantById(),localStorage.setItem("merchantId",""))}return Transactions.prototype.getTransactionDetailsForThisMerchant=function(t){console.log(localStorage.getItem("TransactionId")),localStorage.setItem("TransactionId",t),this.router.navigate(["/app/dashboard"])},Transactions.prototype.getMerchantById=function(){var n=this;this.merchantId=t.trim(this.merchantId),void 0==this.merchantId||0==this.merchantId.length?this.errordiv=!0:(this.errordiv=!1,this._transactionService.getTransactionDetailsById(this.merchantId).subscribe(function(t){n.merchantData=t.data;for(var e=0;e<t.data.length;e++){var r=new Date(1e3*+n.merchantData[e].transactionTime);n.merchantData[e].transactionTime=r}}))},Transactions=__decorate([r.Component({selector:"transactions",styles:[e(1047)],template:e(1087),providers:[i.TransactionService],encapsulation:r.ViewEncapsulation.None}),__metadata("design:paramtypes",["function"==typeof(n="undefined"!=typeof i.TransactionService&&i.TransactionService)&&n||Object,"function"==typeof(o="undefined"!=typeof a.Router&&a.Router)&&o||Object])],Transactions);var n,o}();n.Transactions=o}).call(n,e(43))},1007:function(t,n,e){"use strict";var r=e(74),a=e(155),i=e(0),o=e(107),s=e(1006);n.routes=[{path:"",component:s.Transactions,pathMatch:"full"}];var c=function(){function TransactionsModule(){}return TransactionsModule.routes=n.routes,TransactionsModule=__decorate([i.NgModule({declarations:[s.Transactions],imports:[r.CommonModule,a.FormsModule,o.RouterModule.forChild(n.routes)]}),__metadata("design:paramtypes",[])],TransactionsModule)}();Object.defineProperty(n,"__esModule",{value:!0}),n.default=c},1047:function(t,n){t.exports="/***********************************/\n/**             Profitconfiguration     **/\n/***********************************/\n.subscriptionBox {\n  width: 58%;\n  margin: 0 auto;\n  position: relative;\n  height: 48px;\n  margin-top: 10px;\n  margin-bottom: 50px; }\n\n.input-wrapper {\n  position: absolute;\n  left: 0;\n  height: 100%;\n  top: 0;\n  width: 70%; }\n\n.btn-wrapper {\n  position: absolute;\n  left: 70%;\n  height: 100%;\n  top: 0;\n  width: 30%; }\n\n.btn-wrapper button, .input-wrapper input {\n  width: 100%;\n  height: 100%;\n  height: 100%; }\n\n.left-heading, .right-value {\n  position: relative;\n  float: left; }\n\n.right-value {\n  margin-left: 15px; }\n\n.left-heading p {\n  font-weight: bold; }\n\n.errosDiv {\n  width: 320px;\n  margin: 0 auto; }\n\n.input-wrapper input {\n  background: white;\n  padding-left: 15px;\n  border: none;\n  border-top-left-radius: 3px;\n  border-bottom-left-radius: 3px;\n  font-size: 17.5 !important;\n  font-family: 'Open Sans';\n  font-weight: 500; }\n\n.btn-wrapper button {\n  border: none;\n  background: #64bbe1;\n  color: white;\n  font-family: 'Open Sans';\n  border-radius: 4px;\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n  font-size: 24px; }\n\n.input-wrapper input::placeholder {\n  color: #aaaaaa;\n  font-style: italic;\n  font-size: 17.5 !important;\n  font-family: 'Open Sans';\n  font-weight: 500; }\n"},1087:function(t,n){t.exports='<ol class="breadcrumb">\r\n    <li class="breadcrumb-item">YOU ARE HERE</li>\r\n    <li class="breadcrumb-item active">Transactions List</li>\r\n</ol>\r\n<h1 class="page-title">Transactions <span class="fw-semi-bold">List</span></h1>\r\n\r\n\r\n\r\n\t<div class="errosDiv" *ngIf="errordiv">Enter a merchant Id</div>\r\n\t\t  <div class="subscriptionBox clearfix">\r\n\t\t\t\r\n\t\t\t\t<div class="input-wrapper">\r\n\t\t\t\t\t<input type="text" name="merchantId" [(ngModel)]="merchantId" class="custom-input" placeholder="Enter merchant ID">\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class="btn-wrapper">\r\n\t\t\t\t\t<button class="btn-subscribe" (click)="getMerchantById()" >Send</button>\r\n\t\t\t\t</div>\r\n\t</div>\r\n\r\n\r\n<section class="widget" widget>\r\n    <div class="widget-body table-responsive">\r\n        <table class="table merchantsTable">\r\n            <thead>\r\n                <tr>\r\n                    <th class="hidden-xs-down">#</th>\r\n                    <th>Merchant Id</th>\r\n                    <th>Customer Address</th>\r\n                    <th>Sending Amount</th>\r\n                    <th>Transaction Id</th>\r\n                    <th style="width:300px" >Transaction Time</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor="let merchant of merchantData; let i = index">\r\n                    <td class="hidden-xs-down">{{i + 1}}</td>\r\n                    <td>\r\n                        {{merchant.merchantId}}\r\n                    </td>\r\n                    <td>\r\n                        {{merchant.customerAddress}}\r\n                    </td>\r\n                    <td>\r\n                        {{merchant.sendingAmount}}\r\n                    </td>\r\n                    <td>\r\n                           <a  (click)="getTransactionDetailsForThisMerchant(merchant.transactionId)"> {{merchant.transactionId}}</a>\r\n                    </td>\r\n                    <td style="width:300px" >\r\n                    {{merchant.transactionTime}}\r\n                    </td>\r\n                    <!--<td class="width-150">\r\n                        <button class="btn btn-primary app-btn" (click) = "deleteMerchant(merchant._id)">Delete</button>\r\n                    </td>-->\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</section>'},690:function(t,n){"use strict";var e=function(){function ServiceUrl(){this.baseUrl="http://35.189.115.14:3000/"}return ServiceUrl.prototype.getUrl=function(){return this.baseUrl},ServiceUrl}();n.ServiceUrl=e},697:function(t,n,e){"use strict";var r=e(0),a=e(156);e(242);var i=e(690),o=function(){function TransactionService(t){this.http=t,this.urlService=new i.ServiceUrl}return TransactionService.prototype.getProfitStatisticsByTime=function(t){var n=JSON.stringify({filterTime:t}),e=new a.Headers({"Content-Type":"application/json"}),r=new a.RequestOptions({method:"post",headers:e});return this.http.post(this.urlService.baseUrl+"merchant/getProfitStatisticsByTime",n,r).map(function(t){return t.json()})},TransactionService.prototype.getTransactionStatisticsByTimeRoute=function(t){var n=JSON.stringify({filterTime:t}),e=new a.Headers({"Content-Type":"application/json"}),r=new a.RequestOptions({method:"post",headers:e});return this.http.post(this.urlService.baseUrl+"merchant/getTransactionStatisticsByTimeRoute",n,r).map(function(t){return t.json()})},TransactionService.prototype.getTransactionData=function(t){var n=JSON.stringify({transactionId:t}),e=new a.Headers({"Content-Type":"application/json"}),r=new a.RequestOptions({method:"post",headers:e});return this.http.post(this.urlService.baseUrl+"merchant/getTransactionData",n,r).map(function(t){return t.json()})},TransactionService.prototype.getProfitConfiguration=function(t,n){var e=JSON.stringify({merchantProfit:t,bitpointProfit:n}),r=new a.Headers({"Content-Type":"application/json"}),i=new a.RequestOptions({method:"post",headers:r});return this.http.post(this.urlService.baseUrl+"adminConfiguration/addProfitConfiguration",e,i).map(function(t){return t.json()})},TransactionService.prototype.getTransactionDetailsById=function(t){var n=JSON.stringify({merchantId:t}),e=new a.Headers({"Content-Type":"application/json"}),r=new a.RequestOptions({method:"post",headers:e});return this.http.post(this.urlService.baseUrl+"merchant/getTransactionsByMerchantId",n,r).map(function(t){return t.json()})},TransactionService=__decorate([r.Injectable(),__metadata("design:paramtypes",["function"==typeof(t="undefined"!=typeof a.Http&&a.Http)&&t||Object])],TransactionService);var t}();n.TransactionService=o}});